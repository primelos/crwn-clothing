{"ast":null,"code":"import { createSelector } from \"reselect\"; // import memoize from 'lodash.memoize'\n// const COLLECTION_ID_MAP = {\n//   hats: 1,\n//   sneakers: 2,\n//   jackets: 3,\n//   womens: 4,\n//   mens: 5\n// }\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollectionsForPreview = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []);\nexport const selectCollection = collectionUrlParam => createSelector([selectCollections], collections => collections ? collections[collectionUrlParam] : null // Code needed when  (line 4 and 30) when the shop_data was a array\n// collections => collections.find(collection => collection.id === COLLECTION_ID_MAP[collectionUrlParam])\n);\nexport const selectIsCollectionFetching = createSelector([selectShop], shop => shop.isFetching);\nexport const selectIsCollectionsLoaded = createSelector([selectShop], shop => !!shop.collections);","map":{"version":3,"sources":["/Users/alearanibar/codingcfv/reactpractice/react-mastery/crwn-clothing/client/src/redux/shop/shop.selectors.js"],"names":["createSelector","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching","selectIsCollectionsLoaded"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAApC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC7C,CAACC,UAAD,CAD6C,EAE5CE,IAAD,IAAUA,IAAI,CAACE,WAF8B,CAAxC;AAKP,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACvD,CAACI,iBAAD,CADuD,EAEtDC,WAAD,IAAiBA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA8BC,GAAD,IAASL,WAAW,CAACK,GAAD,CAAjD,CAAH,GAA6D,EAFlC,CAAlD;AAKP,OAAO,MAAMC,gBAAgB,GAAIC,kBAAD,IAC9BZ,cAAc,CACZ,CAACI,iBAAD,CADY,EAEXC,WAAD,IAAkBA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAqC,IAFtD,CAGZ;AACA;AAJY,CADT;AAQL,OAAO,MAAMC,0BAA0B,GAAGb,cAAc,CACpD,CAACC,UAAD,CADoD,EAEpDE,IAAI,IAAIA,IAAI,CAACW,UAFuC,CAAjD;AAKP,OAAO,MAAMC,yBAAyB,GAAGf,cAAc,CACrD,CAACC,UAAD,CADqD,EAErDE,IAAI,IAAI,CAAC,CAACA,IAAI,CAACE,WAFsC,CAAhD","sourcesContent":["import { createSelector } from \"reselect\";\n\n// import memoize from 'lodash.memoize'\n\n// const COLLECTION_ID_MAP = {\n//   hats: 1,\n//   sneakers: 2,\n//   jackets: 3,\n//   womens: 4,\n//   mens: 5\n// }\n\nconst selectShop = (state) => state.shop;\n\nexport const selectCollections = createSelector(\n  [selectShop],\n  (shop) => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n  [selectCollections],\n  (collections) => collections ? Object.keys(collections).map((key) => collections[key]) : []\n);\n\nexport const selectCollection = (collectionUrlParam) =>\n  createSelector(\n    [selectCollections],\n    (collections) => (collections ? collections[collectionUrlParam] : null)\n    // Code needed when  (line 4 and 30) when the shop_data was a array\n    // collections => collections.find(collection => collection.id === COLLECTION_ID_MAP[collectionUrlParam])\n  );\n\n  export const selectIsCollectionFetching = createSelector(\n      [selectShop],\n      shop => shop.isFetching\n    )\n  \n  export const selectIsCollectionsLoaded = createSelector(\n    [selectShop],\n    shop => !!shop.collections\n  )"]},"metadata":{},"sourceType":"module"}