{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alearanibar/codingcfv/reactpractice/react-mastery/crwn-clothing/src/components/sign-in/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input\";\nimport CustomButton from \"../custom-button\"; // import { auth, signInWithGoogle } from '../../firebase/firebase.utils'\n\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\nimport \"./sign-in.styles.scss\";\n\nconst SignIn = ({\n  googleSignInStart,\n  emailSignInStart\n}) => {\n  _s();\n\n  const [useCredentials, setUseCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    email,\n    password\n  } = useCredentials;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setUseCredentials({ ...useCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"I already have a account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        handleChange: handleChange,\n        label: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        handleChange: handleChange,\n        label: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: \"Sign In With Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignIn, \"bLV6d0hw3Yl7qqk5AoNQSr7pr9Q=\");\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn); // import React, { Component } from \"react\";\n// import { connect } from 'react-redux'\n// import FormInput from '../form-input'\n// import CustomButton from '../custom-button'\n// // import { auth, signInWithGoogle } from '../../firebase/firebase.utils'\n// import { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions'\n// import './sign-in.styles.scss'\n// class SignIn extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       email: \"\",\n//       password: \"\",\n//     };  \n//   }\n//   handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const { emailSignInStart } = this.props\n//     const { email, password } = this.state;\n//     emailSignInStart(email, password)\n//   };\n//   handleChange = (e) => {\n//     const { value, name } = e.target\n//     this.setState({[name]: value})\n//   };\n//   render() {\n//     const { googleSignInStart } = this.props\n//     return (\n//       <div className=\"sign-in\">\n//         <h2>I already have a account</h2>\n//         <span>Sign in with your email and password</span>\n//         <form onSubmit={this.handleSubmit}>\n//           <FormInput\n//             type=\"email\"\n//             name=\"email\"\n//             value={this.state.email}\n//             handleChange={this.handleChange}\n//             label=\"email\"\n//             required\n//           />\n//           <FormInput\n//             type=\"password\"\n//             name=\"password\"\n//             value={this.state.password}\n//             handleChange={this.handleChange}\n//             label=\"password\"\n//             required\n//           />\n//           <div className=\"buttons\">\n//             <CustomButton type=\"submit\">Sign In</CustomButton>\n//             <CustomButton\n//               type=\"button\"\n//               onClick={googleSignInStart}\n//               isGoogleSignIn\n//             >\n//               Sign In With Google\n//             </CustomButton>\n//           </div>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n// const mapDispatchToProps = dispatch => ({\n//   googleSignInStart: () => dispatch(googleSignInStart()),\n//   emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\n// })\n// export default connect(null, mapDispatchToProps)(SignIn)\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/alearanibar/codingcfv/reactpractice/react-mastery/crwn-clothing/src/components/sign-in/index.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","useCredentials","setUseCredentials","email","password","handleSubmit","e","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input\";\nimport CustomButton from \"../custom-button\";\n\n// import { auth, signInWithGoogle } from '../../firebase/firebase.utils'\nimport {\n  googleSignInStart,\n  emailSignInStart,\n} from \"../../redux/user/user.actions\";\nimport \"./sign-in.styles.scss\";\n\nconst SignIn = ({ googleSignInStart, emailSignInStart }) => {\n  const [useCredentials, setUseCredentials] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const { email, password } = useCredentials\n  \n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = (e) => {\n    const { value, name } = e.target;\n    setUseCredentials({ ...useCredentials, [name]: value });\n  };\n\n  return (\n    <div className=\"sign-in\">\n      <h2>I already have a account</h2>\n      <span>Sign in with your email and password</span>\n\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          handleChange={handleChange}\n          label=\"email\"\n          required\n        />\n\n        <FormInput\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          handleChange={handleChange}\n          label=\"password\"\n          required\n        />\n        <div className=\"buttons\">\n          <CustomButton type=\"submit\">Sign In</CustomButton>\n          <CustomButton\n            type=\"button\"\n            onClick={googleSignInStart}\n            isGoogleSignIn\n          >\n            Sign In With Google\n          </CustomButton>\n        </div>\n      </form>\n    </div>\n  );\n};\n\n\nconst mapDispatchToProps = (dispatch) => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) =>\n    dispatch(emailSignInStart({ email, password })),\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\n// import React, { Component } from \"react\";\n// import { connect } from 'react-redux'\n// import FormInput from '../form-input'\n// import CustomButton from '../custom-button'\n\n// // import { auth, signInWithGoogle } from '../../firebase/firebase.utils'\n// import { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions'\n// import './sign-in.styles.scss'\n\n\n// class SignIn extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       email: \"\",\n//       password: \"\",\n//     };  \n//   }\n\n//   handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const { emailSignInStart } = this.props\n//     const { email, password } = this.state;\n//     emailSignInStart(email, password)\n//   };\n\n//   handleChange = (e) => {\n//     const { value, name } = e.target\n//     this.setState({[name]: value})\n//   };\n\n//   render() {\n//     const { googleSignInStart } = this.props\n//     return (\n//       <div className=\"sign-in\">\n//         <h2>I already have a account</h2>\n//         <span>Sign in with your email and password</span>\n\n//         <form onSubmit={this.handleSubmit}>\n//           <FormInput\n//             type=\"email\"\n//             name=\"email\"\n//             value={this.state.email}\n//             handleChange={this.handleChange}\n//             label=\"email\"\n//             required\n//           />\n\n//           <FormInput\n//             type=\"password\"\n//             name=\"password\"\n//             value={this.state.password}\n//             handleChange={this.handleChange}\n//             label=\"password\"\n//             required\n//           />\n//           <div className=\"buttons\">\n//             <CustomButton type=\"submit\">Sign In</CustomButton>\n//             <CustomButton\n//               type=\"button\"\n//               onClick={googleSignInStart}\n//               isGoogleSignIn\n//             >\n//               Sign In With Google\n//             </CustomButton>\n//           </div>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n\n// const mapDispatchToProps = dispatch => ({\n//   googleSignInStart: () => dispatch(googleSignInStart()),\n//   emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\n// })\n\n// export default connect(null, mapDispatchToProps)(SignIn)"]},"metadata":{},"sourceType":"module"}