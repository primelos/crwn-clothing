{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpStart, signUpSuccess } from \"./user.actions\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user); // const userRef = yield call(createUserProfileDocument, user);\n    // console.log(userRef);\n    // const userSnapshot = yield userRef.get();\n    // yield put(\n    //   signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n    // );\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user); // const userRef = yield call(createUserProfileDocument, user);\n    // const userSnapshot = yield userRef.get();\n    // yield put(\n    //   signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n    // );\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signUserUp({\n  payload: {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  }\n}) {\n  try {\n    const {\n      user\n    } = auth.createUserWithEmailAndPassword(email, password);\n    createUserProfileDocument(user, {\n      displayName\n    });\n  } catch (error) {\n    yield put();\n  }\n}\nexport function* onCheckUserSession() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* checkUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, onCheckUserSession);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onUserSignUp() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUserUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onUserSignUp)]);\n}","map":{"version":3,"sources":["/Users/alearanibar/codingcfv/reactpractice/react-mastery/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","signOutSuccess","signOutFailure","signUpStart","signUpSuccess","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","signUserUp","displayName","confirmPassword","createUserWithEmailAndPassword","onCheckUserSession","signOut","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","checkUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onUserSignUp","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\n\nimport UserActionTypes from \"./user.types\";\nimport {\n  signInSuccess,\n  signInFailure,\n  signOutSuccess,\n  signOutFailure,\n  signUpStart,\n  signUpSuccess,\n} from \"./user.actions\";\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n  getCurrentUser\n} from \"../../firebase/firebase.utils\";\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n    try{\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(\n      signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n    );\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user)\n    // const userRef = yield call(createUserProfileDocument, user);\n    // console.log(userRef);\n    // const userSnapshot = yield userRef.get();\n    // yield put(\n    //   signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n    // );\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user)\n    // const userRef = yield call(createUserProfileDocument, user);\n    // const userSnapshot = yield userRef.get();\n    // yield put(\n    //   signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n    // );\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* signUserUp({payload: { displayName, email, password, confirmPassword }}) {\n  try {\n    const { user } = auth.createUserWithEmailAndPassword(email, password)\n    createUserProfileDocument(user, { displayName })\n  }catch(error){\n    yield put()\n  }\n}\n\nexport function* onCheckUserSession() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut()\n    yield(put(signOutSuccess()))\n  } catch(error){\n    yield put(signOutFailure(error))\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* checkUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, onCheckUserSession)\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\n}\n\nexport function* onUserSignUp(){\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUserUp)\n}\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onUserSignUp)]);\n}\n"]},"metadata":{},"sourceType":"module"}