{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alearanibar/codingcfv/reactpractice/react-mastery/crwn-clothing/src/pages/shop/index.jsx\";\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections.overview.container\";\nimport CollectionPageContainer from \"../collection/collection.container\";\nimport { fetchCollectionsStart } from \"../../redux/shop/shop.actions\"; // import {\n//   firestore,\n//   convertCollectionsSnapshotToMap,\n// } from \"../../firebase/firebase.utils\";\n// import { updateCollections } from \"../../redux/shop/shop.actions\";\n// import {\n//   selectIsCollectionFetching,\n//   selectIsCollectionsLoaded,\n// } from \"../../redux/shop/shop.selectors\";\n// import { createStructuredSelector } from 'reselect'\n// import WithSpinner from \"../../components/with-spinner\"; \n// import { removeItem } from \"../../redux/cart/cart.actions\";\n// const CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview)\n// const CollectionPageWithSpinner = WithSpinner(CollectionPage)\n\nclass ShopPage extends Component {\n  // state = {\n  //   loading: true,\n  // };\n  // unsubscribeFromSnapshot = null;\n  componentDidMount() {\n    const {\n      fetchCollectionsStart\n    } = this.props;\n    fetchCollectionsStart(); // const { updateCollections } = this.props;\n    // const collectionRef = firestore.collection(\"collections\");\n    //      using firebase observable style object\n    // this.unsubscribeFromSnapshot = collectionRef.onSnapshot(\n    //   async (snapshot) => {\n    //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //     updateCollections(collectionsMap);\n    //     console.log(\"collectionsMap\", collectionsMap);\n    //     this.setState({ loading: false });\n    //   }\n    // );\n    //      OR using a Promise\n    // collectionRef.get().then(async (snapshot) => {\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n    //   console.log(\"snapshot\", collectionsMap);\n    //   updateCollections(collectionsMap)\n    //   this.setState({ loading: false })\n    // })\n    //      OR using Fetch .... it was very nested\n    // fetch(`https://firestore.googleapis.com/v1/projects/crwn-db-fbe5a/databases/(default)/documents/collections`)\n    // .then(res => res.json())\n    // .then(collections => console.log('test',collections.documents))\n  }\n\n  render() {\n    const {\n      match\n    } = this.props; // const { loading } = this.state\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionsOverviewContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        component: CollectionPageContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/alearanibar/codingcfv/reactpractice/react-mastery/crwn-clothing/src/pages/shop/index.jsx"],"names":["React","Component","Route","connect","CollectionsOverviewContainer","CollectionPageContainer","fetchCollectionsStart","ShopPage","componentDidMount","props","render","match","path","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,uBAAP,MAAoC,oCAApC;AACA,SAASC,qBAAT,QAAsC,+BAAtC,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC/B;AACA;AACA;AACA;AAEAO,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEF,MAAAA;AAAF,QAA4B,KAAKG,KAAvC;AACAH,IAAAA,qBAAqB,GAFH,CAGlB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAIDI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKF,KAAvB,CADO,CAEP;;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAG,GAAEE,KAAK,CAACC,IAAK,EAFtB;AAGE,QAAA,SAAS,EAAER;AAHb;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,KAAD;AACE,QAAA,IAAI,EAAG,GAAEO,KAAK,CAACC,IAAK,gBADtB;AAEE,QAAA,SAAS,EAAEP;AAFb;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AApD8B;;AAyDjC,MAAMQ,kBAAkB,GAAIC,QAAD,KAAe;AACxCR,EAAAA,qBAAqB,EAAE,MAAMQ,QAAQ,CAACR,qBAAqB,EAAtB;AADG,CAAf,CAA3B;;AAIA,eAAeH,OAAO,CAAC,IAAD,EAAOU,kBAAP,CAAP,CAAkCN,QAAlC,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections.overview.container\";\nimport CollectionPageContainer from \"../collection/collection.container\";\nimport { fetchCollectionsStart } from \"../../redux/shop/shop.actions\";\n// import {\n//   firestore,\n//   convertCollectionsSnapshotToMap,\n// } from \"../../firebase/firebase.utils\";\n// import { updateCollections } from \"../../redux/shop/shop.actions\";\n// import {\n//   selectIsCollectionFetching,\n//   selectIsCollectionsLoaded,\n// } from \"../../redux/shop/shop.selectors\";\n// import { createStructuredSelector } from 'reselect'\n\n// import WithSpinner from \"../../components/with-spinner\"; \n// import { removeItem } from \"../../redux/cart/cart.actions\";\n\n\n\n// const CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview)\n// const CollectionPageWithSpinner = WithSpinner(CollectionPage)\n\nclass ShopPage extends Component {\n  // state = {\n  //   loading: true,\n  // };\n  // unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const { fetchCollectionsStart } = this.props\n    fetchCollectionsStart()\n    // const { updateCollections } = this.props;\n    // const collectionRef = firestore.collection(\"collections\");\n\n    //      using firebase observable style object\n    // this.unsubscribeFromSnapshot = collectionRef.onSnapshot(\n    //   async (snapshot) => {\n    //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //     updateCollections(collectionsMap);\n    //     console.log(\"collectionsMap\", collectionsMap);\n    //     this.setState({ loading: false });\n    //   }\n    // );\n    //      OR using a Promise\n    // collectionRef.get().then(async (snapshot) => {\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n    //   console.log(\"snapshot\", collectionsMap);\n    //   updateCollections(collectionsMap)\n    //   this.setState({ loading: false })\n    // })\n    //      OR using Fetch .... it was very nested\n    // fetch(`https://firestore.googleapis.com/v1/projects/crwn-db-fbe5a/databases/(default)/documents/collections`)\n    // .then(res => res.json())\n    // .then(collections => console.log('test',collections.documents))\n  }\n\n  \n\n  render() {\n    const { match } = this.props;\n    // const { loading } = this.state\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`}\n          component={CollectionsOverviewContainer}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          component={CollectionPageContainer}\n        />\n      </div>\n    );\n  }\n}\n\n\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}