{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alearanibar/codingcfv/reactpractice/react-mastery/crwn-clothing/src/components/sign-up/index.jsx\";\nimport React, { Component } from 'react';\nimport FormInput from '../form-input';\nimport CustomButton from '../custom-button'; // import { auth, createUserProfileDocument } from '../../firebase/firebase.utils'\n\nimport \"./sign-up.styles.scss\";\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\n\nclass SignUp extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        signUpStart\n      } = this.props;\n      const {\n        displayName,\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n\n      if (password !== confirmPassword) {\n        alert('passwords don\\'t match');\n        return;\n      }\n\n      signUpStart(displayName, email, password, confirmPassword); // try {\n      //   const { user } = await auth.createUserWithEmailAndPassword(email, password)\n      //   await createUserProfileDocument(user, { displayName })\n      //   // clear form\n      //   this.setState({\n      //     displayName: \"\",\n      //     email: \"\",\n      //     password: \"\",\n      //     confirmPassword: \"\",\n      //   })\n      // } catch(error){\n      //   console.log(error);\n      // }\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-up\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"I do not have a account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign up with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"sign-up-form\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"text\",\n          name: \"displayName\",\n          value: displayName,\n          onChange: this.handleChange,\n          label: \"Display Name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"text\",\n          name: \"email\",\n          value: email,\n          onChange: this.handleChange,\n          label: \"Email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: this.handleChange,\n          label: \"Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"password\",\n          name: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: this.handleChange,\n          label: \"Confirm Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"SIGN UP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (displayName, email, password, confirmPassword) => dispatch(signUpStart({\n    displayName,\n    email,\n    password,\n    confirmPassword\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/alearanibar/codingcfv/reactpractice/react-mastery/crwn-clothing/src/components/sign-up/index.jsx"],"names":["React","Component","FormInput","CustomButton","signUpStart","connect","SignUp","constructor","handleSubmit","e","preventDefault","props","displayName","email","password","confirmPassword","state","alert","handleChange","name","value","target","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport FormInput from '../form-input'\nimport CustomButton from '../custom-button'\n// import { auth, createUserProfileDocument } from '../../firebase/firebase.utils'\nimport \"./sign-up.styles.scss\";\nimport { signUpStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux';\n\nclass SignUp extends Component {\n  constructor(){\n    super()\n    \n    this.state={\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    }\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault()\n    const { signUpStart } = this.props\n    const { displayName, email, password, confirmPassword } = this.state;\n    if(password !== confirmPassword) {\n      alert('passwords don\\'t match')\n      return \n    }\n    signUpStart(displayName, email, password, confirmPassword);\n    // try {\n    //   const { user } = await auth.createUserWithEmailAndPassword(email, password)\n    //   await createUserProfileDocument(user, { displayName })\n    //   // clear form\n    //   this.setState({\n    //     displayName: \"\",\n    //     email: \"\",\n    //     password: \"\",\n    //     confirmPassword: \"\",\n    //   })\n    // } catch(error){\n    //   console.log(error);\n    // }\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target\n    this.setState({ [name]: value })\n  }\n\n\n  render() {\n    const { displayName, email, password, confirmPassword } = this.state\n    return (\n      <div className=\"sign-up\">\n        <h2 className=\"title\">I do not have a account</h2>\n        <span>Sign up with your email and password</span>\n        <form className=\"sign-up-form\" onSubmit={this.handleSubmit}>\n          <FormInput\n            type=\"text\"\n            name=\"displayName\"\n            value={displayName}\n            onChange={this.handleChange}\n            label=\"Display Name\"\n            required\n          />\n          <FormInput\n            type=\"text\"\n            name=\"email\"\n            value={email}\n            onChange={this.handleChange}\n            label=\"Email\"\n            required\n          />\n          <FormInput\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleChange}\n            label=\"Password\"\n            required\n          />\n          <FormInput\n            type=\"password\"\n            name=\"confirmPassword\"\n            value={confirmPassword}\n            onChange={this.handleChange}\n            label=\"Confirm Password\"\n            required\n          />\n          <CustomButton type='submit'>SIGN UP</CustomButton>\n        </form>\n      </div>\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch) => ({\n  signUpStart: (displayName, email, password, confirmPassword) => dispatch(signUpStart({ displayName, email, password, confirmPassword }))\n\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp)"]},"metadata":{},"sourceType":"module"}