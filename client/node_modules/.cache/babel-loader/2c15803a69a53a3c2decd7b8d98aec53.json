{"ast":null,"code":"import UserActionTypes from \"./user.types\";\nconst INITIAL_STATE = {\n  currentUser: null,\n  error: null\n};\n\nconst userReducer = (currentState = INITIAL_STATE, action) => {\n  // const { type } = action\n  // switch(type){\n  switch (action.type) {\n    case UserActionTypes.SIGN_IN_SUCCESS:\n      return { ...currentState,\n        currentUser: action.payload,\n        error: null\n      };\n\n    case UserActionTypes.SIGN_OUT_SUCCESS:\n      return { ...currentState,\n        currentUser: null,\n        error: null\n      };\n\n    case UserActionTypes.SIGN_IN_FAILURE:\n    case UserActionTypes.SIGN_OUT_FAILURE:\n    case UserActionTypes.SIGN_UP_FAILURE:\n      return { ...currentState,\n        error: action.payload\n      };\n\n    default:\n      return currentState;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/Users/alearanibar/codingcfv/reactpractice/react-mastery/crwn-clothing/client/src/redux/user/user.reducer.js"],"names":["UserActionTypes","INITIAL_STATE","currentUser","error","userReducer","currentState","action","type","SIGN_IN_SUCCESS","payload","SIGN_OUT_SUCCESS","SIGN_IN_FAILURE","SIGN_OUT_FAILURE","SIGN_UP_FAILURE"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,WAAW,EAAE,IADO;AAEpBC,EAAAA,KAAK,EAAE;AAFa,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,YAAY,GAAGJ,aAAhB,EAA+BK,MAA/B,KAA0C;AAC5D;AACA;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,eAAe,CAACQ,eAArB;AACE,aAAO,EACL,GAAGH,YADE;AAELH,QAAAA,WAAW,EAAEI,MAAM,CAACG,OAFf;AAGLN,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAKH,eAAe,CAACU,gBAArB;AACE,aAAO,EACL,GAAGL,YADE;AAELH,QAAAA,WAAW,EAAE,IAFR;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAMF,SAAKH,eAAe,CAACW,eAArB;AACA,SAAKX,eAAe,CAACY,gBAArB;AACA,SAAKZ,eAAe,CAACa,eAArB;AACE,aAAO,EACL,GAAGR,YADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACG;AAFT,OAAP;;AAIF;AACE,aAAOJ,YAAP;AAtBJ;AAwBD,CA3BD;;AA6BA,eAAeD,WAAf","sourcesContent":["import UserActionTypes from \"./user.types\";\n\nconst INITIAL_STATE = {\n  currentUser: null,\n  error: null\n}\n\nconst userReducer = (currentState = INITIAL_STATE, action) => {\n  // const { type } = action\n  // switch(type){\n  switch (action.type) {\n    case UserActionTypes.SIGN_IN_SUCCESS:\n      return {\n        ...currentState,\n        currentUser: action.payload,\n        error: null,\n      };\n    case UserActionTypes.SIGN_OUT_SUCCESS:\n      return {\n        ...currentState,\n        currentUser: null,\n        error: null\n      }\n\n    case UserActionTypes.SIGN_IN_FAILURE:\n    case UserActionTypes.SIGN_OUT_FAILURE:\n    case UserActionTypes.SIGN_UP_FAILURE:\n      return {\n        ...currentState,\n        error: action.payload,\n      };\n    default:\n      return currentState;\n  }\n}\n\nexport default userReducer"]},"metadata":{},"sourceType":"module"}