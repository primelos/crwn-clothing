{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot); // console.log(\"shopActions\", collectionsMap);\n\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n}; // export const fetchCollectionsStart = () => ({\n//   type: ShopActionTypes.FETCH_COLLECTIONS_START,\n// })","map":{"version":3,"sources":["/Users/alearanibar/codingcfv/reactpractice/react-mastery/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAGA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADoB,CAAP,CAA9B;AAKP,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAK;AACxDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADkC;AAExDC,EAAAA,OAAO,EAAEF;AAF+C,CAAL,CAA9C;AAKP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAAK;AACtDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBADgC;AAEtDH,EAAAA,OAAO,EAAEE;AAF6C,CAAL,CAA5C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC9C,SAAOC,QAAQ,IAAI;AACjB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyB,MAAOC,QAAP,IAAoB;AAC3C,YAAMZ,cAAc,GAAGL,+BAA+B,CAACiB,QAAD,CAAtD,CAD2C,CAE3C;;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACD,KAJD,EAIGa,KAJH,CAISC,KAAK,IAAIP,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAJ1B;AAKD,GATD;AAUD,CAXM,C,CAaP;AACA;AACA","sourcesContent":["import ShopActionTypes from './shop.types'\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\n\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\n  \n})\n\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n})\n\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n})\n\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart())\n\n    collectionRef.get().then(async (snapshot) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n      // console.log(\"shopActions\", collectionsMap);\n      dispatch(fetchCollectionsSuccess(collectionsMap))\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)))\n  }\n}\n\n// export const fetchCollectionsStart = () => ({\n//   type: ShopActionTypes.FETCH_COLLECTIONS_START,\n// })"]},"metadata":{},"sourceType":"module"}