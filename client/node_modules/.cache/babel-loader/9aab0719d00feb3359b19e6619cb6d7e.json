{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alearanibar/codingcfv/reactpractice/react-mastery/crwn-clothing/src/components/sign-up/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input\";\nimport CustomButton from \"../custom-button\"; // import { auth, createUserProfileDocument } from '../../firebase/firebase.utils'\n\nimport { signUpStart } from \"../../redux/user/user.actions\";\nimport \"./sign-up.styles.scss\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  _s();\n\n  const [useCredentials, setUseCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = useCredentials;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password,\n      confirmPassword\n    }); // try {\n    //   const { user } = await auth.createUserWithEmailAndPassword(email, password)\n    //   await createUserProfileDocument(user, { displayName })\n    //   // clear form\n    //   this.setState({\n    //     displayName: \"\",\n    //     email: \"\",\n    //     password: \"\",\n    //     confirmPassword: \"\",\n    //   })\n    // } catch(error){\n    //   console.log(error);\n    // }\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUseCredentials({ ...useCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"I do not have a account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        name: \"displayName\",\n        value: displayName,\n        onChange: handleChange,\n        label: \"Display Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        name: \"email\",\n        value: email,\n        onChange: handleChange,\n        label: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: handleChange,\n        label: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: handleChange,\n        label: \"Confirm Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"submit\",\n        children: \"SIGN UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n};\n\n_s(SignUp, \"2ftPKJzoSFLJqsGGEKQ0GhF1L1Q=\");\n\n_c = SignUp;\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp); // import React, { Component } from 'react'\n// import { connect } from 'react-redux';\n// import FormInput from '../form-input'\n// import CustomButton from '../custom-button'\n// // import { auth, createUserProfileDocument } from '../../firebase/firebase.utils'\n// import { signUpStart } from '../../redux/user/user.actions';\n// import \"./sign-up.styles.scss\";\n// class SignUp extends Component {\n//   constructor(){\n//     super()\n//     this.state={\n//       displayName: '',\n//       email: '',\n//       password: '',\n//       confirmPassword: ''\n//     }\n//   }\n//   handleSubmit = async (e) => {\n//     e.preventDefault()\n//     const { signUpStart } = this.props\n//     const { displayName, email, password, confirmPassword } = this.state;\n//     if(password !== confirmPassword) {\n//       alert('passwords don\\'t match')\n//       return \n//     }\n//     signUpStart({ displayName, email, password, confirmPassword });\n//     // try {\n//     //   const { user } = await auth.createUserWithEmailAndPassword(email, password)\n//     //   await createUserProfileDocument(user, { displayName })\n//     //   // clear form\n//     //   this.setState({\n//     //     displayName: \"\",\n//     //     email: \"\",\n//     //     password: \"\",\n//     //     confirmPassword: \"\",\n//     //   })\n//     // } catch(error){\n//     //   console.log(error);\n//     // }\n//   }\n//   handleChange = (e) => {\n//     const { name, value } = e.target\n//     this.setState({ [name]: value })\n//   }\n//   render() {\n//     const { displayName, email, password, confirmPassword } = this.state\n//     return (\n//       <div className=\"sign-up\">\n//         <h2 className=\"title\">I do not have a account</h2>\n//         <span>Sign up with your email and password</span>\n//         <form className=\"sign-up-form\" onSubmit={this.handleSubmit}>\n//           <FormInput\n//             type=\"text\"\n//             name=\"displayName\"\n//             value={displayName}\n//             onChange={this.handleChange}\n//             label=\"Display Name\"\n//             required\n//           />\n//           <FormInput\n//             type=\"text\"\n//             name=\"email\"\n//             value={email}\n//             onChange={this.handleChange}\n//             label=\"Email\"\n//             required\n//           />\n//           <FormInput\n//             type=\"password\"\n//             name=\"password\"\n//             value={password}\n//             onChange={this.handleChange}\n//             label=\"Password\"\n//             required\n//           />\n//           <FormInput\n//             type=\"password\"\n//             name=\"confirmPassword\"\n//             value={confirmPassword}\n//             onChange={this.handleChange}\n//             label=\"Confirm Password\"\n//             required\n//           />\n//           <CustomButton type='submit'>SIGN UP</CustomButton>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n// const mapDispatchToProps = (dispatch) => ({\n//   signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials)),\n// });\n// export default connect(null, mapDispatchToProps)(SignUp)\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/alearanibar/codingcfv/reactpractice/react-mastery/crwn-clothing/src/components/sign-up/index.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","useCredentials","setUseCredentials","displayName","email","password","confirmPassword","handleSubmit","e","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input\";\nimport CustomButton from \"../custom-button\";\n// import { auth, createUserProfileDocument } from '../../firebase/firebase.utils'\nimport { signUpStart } from \"../../redux/user/user.actions\";\nimport \"./sign-up.styles.scss\";\n\nconst SignUp = ({ signUpStart, }) => {\n    const [useCredentials, setUseCredentials] = useState({\n           displayName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    })\n  \n  \n  const { displayName, email, password, confirmPassword } = useCredentials\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n    signUpStart({ displayName, email, password, confirmPassword });\n    // try {\n    //   const { user } = await auth.createUserWithEmailAndPassword(email, password)\n    //   await createUserProfileDocument(user, { displayName })\n    //   // clear form\n    //   this.setState({\n    //     displayName: \"\",\n    //     email: \"\",\n    //     password: \"\",\n    //     confirmPassword: \"\",\n    //   })\n    // } catch(error){\n    //   console.log(error);\n    // }\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUseCredentials({ ...useCredentials, [name]: value });\n  };\n\n    return (\n      <div className=\"sign-up\">\n        <h2 className=\"title\">I do not have a account</h2>\n        <span>Sign up with your email and password</span>\n        <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n          <FormInput\n            type=\"text\"\n            name=\"displayName\"\n            value={displayName}\n            onChange={handleChange}\n            label=\"Display Name\"\n            required\n          />\n          <FormInput\n            type=\"text\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            label=\"Email\"\n            required\n          />\n          <FormInput\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            label=\"Password\"\n            required\n          />\n          <FormInput\n            type=\"password\"\n            name=\"confirmPassword\"\n            value={confirmPassword}\n            onChange={handleChange}\n            label=\"Confirm Password\"\n            required\n          />\n          <CustomButton type=\"submit\">SIGN UP</CustomButton>\n        </form>\n      </div>\n    );\n    }\nconst mapDispatchToProps = (dispatch) => ({\n  signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials)),\n});\nexport default connect(null, mapDispatchToProps)(SignUp);\n\n\n// import React, { Component } from 'react'\n// import { connect } from 'react-redux';\n// import FormInput from '../form-input'\n// import CustomButton from '../custom-button'\n// // import { auth, createUserProfileDocument } from '../../firebase/firebase.utils'\n// import { signUpStart } from '../../redux/user/user.actions';\n// import \"./sign-up.styles.scss\";\n\n// class SignUp extends Component {\n//   constructor(){\n//     super()\n    \n//     this.state={\n//       displayName: '',\n//       email: '',\n//       password: '',\n//       confirmPassword: ''\n//     }\n//   }\n\n//   handleSubmit = async (e) => {\n//     e.preventDefault()\n//     const { signUpStart } = this.props\n//     const { displayName, email, password, confirmPassword } = this.state;\n//     if(password !== confirmPassword) {\n//       alert('passwords don\\'t match')\n//       return \n//     }\n//     signUpStart({ displayName, email, password, confirmPassword });\n//     // try {\n//     //   const { user } = await auth.createUserWithEmailAndPassword(email, password)\n//     //   await createUserProfileDocument(user, { displayName })\n//     //   // clear form\n//     //   this.setState({\n//     //     displayName: \"\",\n//     //     email: \"\",\n//     //     password: \"\",\n//     //     confirmPassword: \"\",\n//     //   })\n//     // } catch(error){\n//     //   console.log(error);\n//     // }\n//   }\n\n//   handleChange = (e) => {\n//     const { name, value } = e.target\n//     this.setState({ [name]: value })\n//   }\n\n\n//   render() {\n//     const { displayName, email, password, confirmPassword } = this.state\n//     return (\n//       <div className=\"sign-up\">\n//         <h2 className=\"title\">I do not have a account</h2>\n//         <span>Sign up with your email and password</span>\n//         <form className=\"sign-up-form\" onSubmit={this.handleSubmit}>\n//           <FormInput\n//             type=\"text\"\n//             name=\"displayName\"\n//             value={displayName}\n//             onChange={this.handleChange}\n//             label=\"Display Name\"\n//             required\n//           />\n//           <FormInput\n//             type=\"text\"\n//             name=\"email\"\n//             value={email}\n//             onChange={this.handleChange}\n//             label=\"Email\"\n//             required\n//           />\n//           <FormInput\n//             type=\"password\"\n//             name=\"password\"\n//             value={password}\n//             onChange={this.handleChange}\n//             label=\"Password\"\n//             required\n//           />\n//           <FormInput\n//             type=\"password\"\n//             name=\"confirmPassword\"\n//             value={confirmPassword}\n//             onChange={this.handleChange}\n//             label=\"Confirm Password\"\n//             required\n//           />\n//           <CustomButton type='submit'>SIGN UP</CustomButton>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n// const mapDispatchToProps = (dispatch) => ({\n//   signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials)),\n// });\n\n// export default connect(null, mapDispatchToProps)(SignUp)"]},"metadata":{},"sourceType":"module"}